<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PullToRefresh">
        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

        <declare-styleable name="RoundImageView">
            <attr name="type" format="enum">
                <enum name="circle" value="1"/>
                <enum name="round" value="2"/>
            </attr>
            <attr name="radius" format="dimension"/>
        </declare-styleable>


    <declare-styleable name="RoundProgress">
        <!--背景圆形颜色 -->
        <attr name="bgColor" format="color"/>
        <!--进度条颜色 -->
        <attr name="roundColor" format="color"/>
        <!--进度条及背景圆形的宽度 -->
        <attr name="roundWidth" format="dimension"/>
        <!--中心字体的大小 -->
        <attr name="roundTextSize" format="dimension"/>
        <!--中心字体的颜色 -->
        <attr name="roundTextColor" format="color"/>
    </declare-styleable>

    <!-- 使用-->
    <declare-styleable name="HorizonalPrograssBarWithPrograss">

        <!--字体大小-->
        <attr name="text_size" format="dimension"></attr>
        <!--字体颜色-->
        <attr name="text_color" format="color"></attr>
        <attr name="prograss_text_offset" format="dimension"></attr>
        <attr name="prograss_unreach_color" format="color"></attr>
        <attr name="prograss_unreach_height" format="dimension"></attr>
        <attr name="prograss_reach_color" format="color"></attr>
        <attr name="prograss_reach_height" format="dimension"></attr>

    </declare-styleable>

    <!--圆弧进度条-->
    <declare-styleable name="CompletedView">
        <attr name="radi" format="dimension"/>
        <attr name="strokeWidth" format="dimension"/>
        <attr name="circleColor" format="color"/>
        <attr name="ringColor" format="color"/>
        <attr name="ringBgColor" format="color"/>
    </declare-styleable>


    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>


    <declare-styleable name="SwitchView">
        <attr name="hasShadow" format="boolean"/>
        <attr name="primaryColor" format="color"/>
        <attr name="primaryColorDark" format="color"/>
        <attr name="offColor" format="color"/>
        <attr name="offColorDark" format="color"/>
        <attr name="shadowColor" format="color"/>
        <attr name="ratioAspect" format="float"/>
        <attr name="isOpened" format="boolean"/>
    </declare-styleable>


    <!--聊天-->
    <declare-styleable name="EmoticonsIndicatorView">

        <attr name="bmpNomal" format="reference" />

        <attr name="bmpSelect" format="reference" />
    </declare-styleable>

    <declare-styleable name="HoloCircularProgressBar">
        <attr name="stroke_width" format="dimension" />
        <attr name="progress" format="float" />
        <attr name="marker_progress" format="float" />
        <attr name="progress_color" format="color" />
        <attr name="progress_background_color" format="color" />
        <attr name="thumb_visible" format="boolean" />
        <attr name="marker_visible" format="boolean" />
        <attr name="android:gravity" />
    </declare-styleable>
    <declare-styleable name="ProgressWheel">
        <attr name="matProg_progressIndeterminate" format="boolean" />
        <attr name="matProg_barColor" format="color" />
        <attr name="matProg_rimColor" format="color" />
        <attr name="matProg_rimWidth" format="dimension" />
        <attr name="matProg_spinSpeed" format="float" />
        <attr name="matProg_barSpinCycleTime" format="integer" />
        <attr name="matProg_circleRadius" format="dimension" />
        <attr name="matProg_fillRadius" format="boolean" />
        <attr name="matProg_barWidth" format="dimension" />
        <attr name="matProg_linearProgress" format="boolean" />
    </declare-styleable>

    <declare-styleable name="CropImageView">
        <attr name="cropMaskColor" format="color"/>
        <attr name="cropBorderColor" format="color"/>
        <attr name="cropBorderWidth" format="dimension"/>
        <attr name="cropFocusWidth" format="dimension"/>
        <attr name="cropFocusHeight" format="dimension"/>
        <attr name="cropStyle" format="enum">
            <enum name="rectangle" value="0"/>
            <enum name="circle" value="1"/>
        </attr>
    </declare-styleable>

    <attr name="circularProgressBarStyle" format="reference" />

    <attr name="siArrowPosition">
        <enum name="left" value="0" />
        <enum name="right" value="1" />
    </attr>
    <attr name="siBorderType">
        <enum name="stroke" value="0" />
        <enum name="fill" value="1" />
    </attr>
    <attr name="siStrokeCap">
        <enum name="butt" value="0" />
        <enum name="round" value="1" />
        <enum name="square" value="2" />
    </attr>
    <attr name="siStrokeJoin">
        <enum name="bevel" value="0" />
        <enum name="miter" value="1" />
        <enum name="round" value="2" />
    </attr>

    <declare-styleable name="StickyListHeadersListView">
        <attr name="stickyListHeadersListViewStyle" format="reference"/>

        <!-- View attributes -->
        <attr name="android:clipToPadding" />
        <attr name="android:scrollbars" />
        <attr name="android:overScrollMode" />
        <attr name="android:padding" />
        <attr name="android:paddingLeft" />
        <attr name="android:paddingTop" />
        <attr name="android:paddingRight" />
        <attr name="android:paddingBottom" />

        <!-- ListView attributes -->
        <attr name="android:fadingEdgeLength" />
        <attr name="android:requiresFadingEdge" />
        <attr name="android:cacheColorHint" />
        <attr name="android:choiceMode" />
        <attr name="android:drawSelectorOnTop" />
        <attr name="android:fastScrollEnabled" />
        <attr name="android:fastScrollAlwaysVisible" />
        <attr name="android:listSelector" />
        <attr name="android:scrollingCache" />
        <attr name="android:scrollbarStyle" />
        <attr name="android:divider" />
        <attr name="android:dividerHeight" />
        <attr name="android:transcriptMode" />
        <attr name="android:stackFromBottom" />

        <!-- StickyListHeaders attributes -->
        <attr name="hasStickyHeaders" format="boolean" />
        <attr name="isDrawingListUnderStickyHeader" format="boolean" />
    </declare-styleable>

    <declare-styleable name="drop_down_list_attr">
        <attr name="isAutoLoadOnBottom" format="boolean" />
        <attr name="isDropDownStyle" format="boolean" />
        <attr name="isOnBottomStyle" format="boolean" />
    </declare-styleable>

    <declare-styleable name="SelectableRoundedImageView">
        <attr name="sriv_left_top_corner_radius" format="dimension" />
        <attr name="sriv_right_top_corner_radius" format="dimension" />
        <attr name="sriv_left_bottom_corner_radius" format="dimension" />
        <attr name="sriv_right_bottom_corner_radius" format="dimension" />
        <attr name="sriv_border_width" format="dimension" />
        <attr name="sriv_border_color" format="color" />
        <attr name="sriv_oval" format="boolean" />
        <attr name="android:scaleType" />
    </declare-styleable>

    <declare-styleable name="JCameraView">
        <attr name="iconWidth" format="dimension"/>
        <attr name="iconMargin" format="dimension"/>
        <attr name="iconSrc" format="dimension"/>
    </declare-styleable>

    <declare-styleable name="SwipeBackLayout">
        <attr name="edge_size" format="dimension"/>
        <attr name="edge_flag">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
            <enum name="bottom" value="2" />
            <enum name="all" value="3" />
        </attr>
        <attr name="shadow_left" format="reference"/>
        <attr name="shadow_right" format="reference"/>
        <attr name="shadow_bottom" format="reference"/>
    </declare-styleable>

    <attr name="SwipeBackLayoutStyle" format="reference"/>


    <declare-styleable name="CameraProgressBar">
        <attr name="scale" format="float"/>
        <attr name="isLongScale" format="boolean"/>
        <attr name="progressWidth" format="dimension"/>
        <attr name="innerRadio" format="dimension"/>
        <attr name="innerColor" format="color"/>
        <attr name="backgroundColor" format="color"/>
        <attr name="outerColor" format="color"/>
        <attr name="progressColor" format="color"/>
        <attr name="maxProgress" format="integer"/>
        <attr name="progres" format="integer"/>
    </declare-styleable>
</resources>
